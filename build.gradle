plugins {
  id 'com.diffplug.spotless' version '6.25.0'
}
repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://www.jitpack.io'
  }
  maven{ url "https://gh.llkk.cc/https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
}

spotless {
  format 'styling', {
    target '*.json','**/*.json'
    prettier().config(['tabWidth': 2])
  }
  flexmark {
    target '**/*.md'
    flexmark()
  }
}
ext{
  versions = [:]
  libraries = [:]
}
versions.arc = "v149"
libraries.getArc = { String moduleName ->
  return "com.github.anuken.arc:$moduleName:${versions.arc}"
}
versions.mdt = "v149"
libraries.getMdt = { String moduleName ->
  return "com.github.anuken.mindustry:$moduleName:${versions.mdt}"
}
libraries.arcCore = libraries.getArc("arc-core")
libraries.mdtCore = libraries.getMdt("core")
allprojects {
  apply plugin: "java"
  apply plugin: "com.diffplug.spotless"
  apply plugin: 'eclipse'
  version '1.0'
  spotless {
    groovyGradle {
      target '*.gradle'
      greclipse().configFile("${rootProject.projectDir}/greclipse.properties")
    }
    java {
      eclipse()
          .configFile("${rootProject.projectDir}/eclipse-prefs.xml")
      licenseHeader """
mindustry preoxide lib
            Copyright (C) 2025 EmmmM9O

            This program is free software: you can redistribute it and/or modify
            it under the terms of the GNU General Public License as published by
            the Free Software Foundation, either version 3 of the License, or
            (at your option) any later version.

            This program is distributed in the hope that it will be useful,
            but WITHOUT ANY WARRANTY; without even the implied warranty of
            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
            GNU General Public License for more details.

            You should have received a copy of the GNU General Public License
            along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
    }
  }
  repositories {
    mavenLocal()
    maven{ url 'https://repo.eclipse.org/content/groups/releases/' }
    mavenCentral()
    maven {
      url 'https://www.jitpack.io'
    }
  }

  java {
    targetCompatibility = 8
    sourceCompatibility = JavaVersion.VERSION_17
  }

  ext {
    jabelVersion = "0.9.0"
    isWindows = System.getProperty("os.name").toLowerCase().contains("windows")
    sdkRoot = System.getenv("ANDROID_HOME") ?: System.getenv("ANDROID_SDK_ROOT")
    pname = project.path.substring(1).replace(":", "-")
  }

  tasks.withType(JavaCompile){
    options.compilerArgs.addAll(['--release', '8'])
  }

  dependencies{
    compileOnly libraries.mdtCore
    compileOnly libraries.arcCore

    annotationProcessor "com.github.Anuken:jabel:$jabelVersion"
  }

  jar{
    duplicatesStrategy='exclude'
    archiveFileName = "${pname}Desktop.jar"

    from{
      configurations.runtimeClasspath.collect{ it.isDirectory() ? it : zipTree(it) }
    }
    from("build/generated/assets"){
      include "**"
    }
    from("assets/"){
      include "**"
    }
    from("./"){
      include "mod.json"
      include "pocontent/**"
    }
  }
  task jarAndroid{
    dependsOn "jar"

    doLast{

      def dependencies = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList()).collect{ "--classpath $it.path" }.join(" ")


      "d8 $dependencies --min-api 14 --output ${pname}Android.jar ${project.archivesBaseName}Desktop.jar"
          .execute(null, new File("$buildDir/libs")).waitForProcessOutput(System.out, System.err)
    }
  }

  task deploy(type: Jar){
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "preoxide-${pname}.jar"

    from{
      [
        zipTree("$buildDir/libs/${pname}Desktop.jar"),
        zipTree("$buildDir/libs/${pname}Android.jar")
      ]
    }

    doLast{
      delete{
        delete "$buildDir/libs/${pname}Desktop.jar"
        delete "$buildDir/libs/${pname}Android.jar"
      }
    }
  }
  configurations.all{
    resolutionStrategy.eachDependency { details ->
      if(details.requested.group == 'com.github.Anuken.Arc'){
        details.useVersion "$versions.arc"
      }
    }
  }
}
project(":parser"){
  ext{
  }
  dependencies{
  }
}
project(":graphics"){
  ext{
  }
  dependencies{
  }
}
project(":universe"){
  ext{
  }
  dependencies{
    compileOnly project(":graphics")
    compileOnly project(":parser")
  }
}
